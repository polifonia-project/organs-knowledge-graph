PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX fx:   <http://sparql.xyz/facade-x/ns/>
PREFIX xyz:  <http://sparql.xyz/facade-x/data/>
PREFIX organs: <http://w3id.org/polifonia/resource/organs/>
PREFIX organ: <http://w3id.org/polifonia/ontology/organs/>
PREFIX core: <https://w3id.org/polifonia/ontology/core/>

construct {

    #################
    # Predefined roles
    organs:roleBuilder a core:Role ;
    rdfs:label "Builder" .

    ##################
    # Predefined tasks
    organs:taskDelivery a core:Task ;
        rdfs:label "Delivery" .

    #################
    # Organ individual

    ?organ_iri a organ:Organ ;
        core:isDescribedBy ?project_delivery ;
        core:isDescribedBy ?project_iri ;
        rdfs:label ?building_year ;
        core:isWholeIncludedIn ?organ_building_parthood_iri ;
        core:isWholeIncludedIn ?organ_originallocation_parthood_iri .

    # construct a parthood with location and timeinterval of the organ

    ?organ_building_parthood_iri a core:Parthood ;
        core:hasTimeInterval ?build_timeinterval_iri ;
        core:hasPlace ?build_place_iri .
    
    ?build_timeinterval_iri a core:TimeInterval ;
        core:startTime ?building_year .

    ?build_place_iri a core:PhysicalSite ;
        rdfs:label ?organ_building_place .

    # if there is a original location, make a dedicated parthood for that

    ?organ_originallocation_parthood_iri a core:Parthood ;
        core:hasTimeInterval ?originallocation_timeinterval_iri ;
        core:hasPlace ?originallocation_place_iri .
    
    ?originallocation_timeinterval_iri a core:TimeInterval ;
        core:endTime ?building_year .

    ?originallocation_place_iri a core:PhysicalSite ;
        rdfs:label ?organ_originallocation_place .

    ###########
    # Deliveries

    ?project_delivery a core:Project ;
        core:hasAgentRole ?project_delivery_builder_agentrole ;
        core:definesTask organs:taskDelivery ;
        core:hasTimeInterval ?project_delivery_timeinterval .

    ?project_delivery_timeinterval a core:TimeInterval ;
        core:endTime ?project_delivery_endtime ;
        core:startTime ?project_delivery_starttime .

    ?project_delivery_builder_agent a core:Agent ;
        rdfs:label ?project_delivery_builder_disambiguatedname ;
        rdfs:label ?project_delivery_builder_disambiguatedid .

    ?project_delivery_builder_agentrole a core:AgentRole ;
        core:hasAgent ?project_delivery_builder_agent ;
        core:hasRole organs:roleBuilder .

    ##############
    #Other projects

    ?project_iri a core:Project ;
        core:definesTask ?project_task_iri ;
        core:hasTimeInterval ?project_timeinterval ;
        core:hasAgentRole ?project_builder_agentrole .

    ?project_timeinterval a core:TimeInterval ;
        core:endTime ?project_endtime ;
        core:startTime ?project_starttime .

    ?project_task_iri a core:Task ;
         rdfs:label ?project_change .

    ?project_builder_agent a core:Agent ;
        rdfs:label ?project_builder_disambiguatedname ;
        rdfs:label ?project_builder_disambiguatedid .

    ?project_builder_agentrole a core:AgentRole ;
        core:hasAgent ?project_builder_agent ;
        core:hasRole organs:roleBuilder .

}
WHERE {

    SERVICE <x-sparql-anything:> {

        fx:properties fx:location "./output/base.json"  .
    
        ?base_root a fx:root ;
            ?organ_slot ?organ_base .

        ?organ_base xyz:name ?organ_building_place .

        BIND (IRI(replace(str(?organ_slot), str(xyz:), str(organs:))) AS ?organ_iri)
        BIND (IRI(concat(str(organs:timeinterval),struuid())) AS ?build_timeinterval_iri)
        BIND (IRI(concat(str(organs:physicalsite),struuid())) AS ?build_place_iri)
        BIND (IRI(concat(str(organs:parthood),struuid())) AS ?organ_building_parthood_iri)

        # VALUES ?organ_iri {
        #     organs:Part01_005NIEUW
        #     organs:Part13_138Ruinen
        # }
    }

    SERVICE <x-sparql-anything:> {

        fx:properties fx:location "./output/history_base.json"  .
    
        ?deliveries_root a fx:root ;
            ?organ_slot ?organ .

        OPTIONAL {            
            ?organ xyz:originallocation ?organ_originallocation_place .

            FILTER( ?organ_originallocation_place != "" )

            BIND (IRI(concat(str(organs:physicalsite),struuid())) AS ?originallocation_place_iri)
            BIND (IRI(concat(str(organs:parthood),struuid())) AS ?organ_originallocation_parthood_iri)
            BIND (IRI(concat(str(organs:timeinterval),struuid())) AS ?originallocation_timeinterval_iri)
        }

        ?organ xyz:deliveries ?deliveries .
        ?deliveries fx:anySlot ?delivery .
        ?deliveries rdf:_1 ?first_delivery . #to extract building year

        #These need to be done here
        BIND (IRI(concat(str(organs:project),struuid())) AS ?project_delivery)
        BIND (IRI(concat(str(organs:timeinterval),struuid())) AS ?project_delivery_timeinterval)
        BIND (IRI(concat(str(organs:agentrole),struuid())) AS ?project_delivery_builder_agentrole)
        
        ?delivery xyz:year_low ?project_delivery_starttime .
        ?delivery xyz:year_high ?project_delivery_endtime .

        ?first_delivery xyz:year_low ?building_year .

        OPTIONAL {
            ?delivery xyz:extracted_names ?delivery_extracted_names .
            ?delivery_extracted_names fx:anySlot ?extracted_name .
            ?extracted_name xyz:disambiguated_name ?project_delivery_builder_disambiguatedname .
            ?extracted_name xyz:disambiguated_name_id ?project_delivery_builder_disambiguatedid .
        }

        #This one needs to be done here
        BIND (IRI(concat(str(organs:agentDisambiguatedBuilder), ?project_delivery_builder_disambiguatedid)) AS ?project_delivery_builder_agent)

    }

    SERVICE <x-sparql-anything:> {

        fx:properties fx:location "./output/history_projects.json"  .
    
        ?projects_root a fx:root ;
            ?organ_slot ?projects .

        ?projects fx:anySlot ?project .

        #These need to be done here
        BIND (IRI(concat(str(organs:project),struuid())) AS ?project_iri)
        BIND (IRI(concat(str(organs:timeinterval),struuid())) AS ?project_timeinterval)
        BIND (IRI(concat(str(organs:agentrole), struuid())) AS ?project_builder_agentrole)

        ?project xyz:year_low ?project_starttime .
        ?project xyz:year_high ?project_endtime .

        ?project xyz:description ?project_description .
        ?project xyz:changes ?project_changes .
        ?project_changes ?_ ?project_change . 

        #This one needs to be done here
        BIND (IRI(concat(str(organs:task),struuid())) AS ?project_task_iri)

        OPTIONAL {
            ?project xyz:extracted_names ?project_extracted_names .
            ?project_extracted_names fx:anySlot ?project_extracted_name .
            ?project_extracted_name xyz:disambiguated_name ?project_builder_disambiguatedname .
            ?project_extracted_name xyz:disambiguated_name_id ?project_builder_disambiguatedid .
        }

        #This one needs to be done here
        BIND (IRI(concat(str(organs:agentDisambiguatedBuilder), ?project_builder_disambiguatedid)) AS ?project_builder_agent)


    }
}
